
include 'emu8086.inc'

org 100h


mov CX, rows
mov BX, 0
printRow: 
    mov holdCount, CX
    mov cx, cols 
    printAnother: 
        mov al, maze + bx
        call symbol
        putc al
        inc bx
        loop printAnother
    printn 
    mov cx, holdCount
    loop printRow
    CURSOROFF 
call move  


     
    
symbol PROC;start
    cmp maze + bx, 1 
    jz wall
    cmp maze + bx, 2   
    jz goal
    jmp done   
    wall: 
        mov al, 219d   
        jmp done
        
    goal:
        mov al, 15d   
        jmp done 
        
    done:
    ret
symbol ENDP;end
    


move PROC;start function 
code: 
    gotoxy x, y
    mov bx, pos
    mov al, maze + bx
    cmp al, 2
    jz win
    
    
    mov ah, 0
    int 16h    
    cmp al, 'd' 
    je right
    cmp al, 'a' 
    je left
    cmp al, 'w'
    je up
    cmp al, 's' 
    je down 
    
    right:
        gotoxy x,y  ;sets cursor to player location
        inc x       
        inc pos     
        mov bx, pos 
        mov al, maze + bx 
        cmp al, 1        
        jz mRight
        jmp rNext
       mRight:
        putc 07
        putc 03
        sub pos, 1 
        sub x, 1
        jmp code    
       rNext:    
        putc 00
        gotoxy x,y 
        putc 03     ;sets the new location for player 
        jmp code 
        
    left:
        gotoxy x,y
        sub x, 1    
        sub pos, 1
        mov bx, pos
        mov al, maze + bx
        cmp al, 1
        jz mLeft
        jmp lNext
       mLeft:
        putc 07
        putc 03
        inc pos
        inc x
        jmp code
       lNext:
        putc 00
        gotoxy x,y
        putc 03    
        jmp code
        
    up:
        gotoxy x,y
        sub y, 1  
        sub pos, cols 
        mov bx, pos
        mov al, maze + bx
        cmp al, 1
        jz mUp
        jmp uNext
       mUp:
        putc 07
        putc 03
        add pos, cols
        inc y
        jmp code
       uNext:
        putc 00
        gotoxy x,y
        putc 03   
        jmp code
        
    down:
        gotoxy x,y 
        inc y
        add pos, cols 
        mov bx, pos
        mov al, maze + bx
        cmp al, 1
        jz mDown
        jmp dNext
       mDown:
        putc 07
        putc 03
        sub pos, cols
        sub y, 1
        jmp code
       dNext:
        putc 00
        gotoxy x,y
        putc 03    
        jmp code    
        
        
    ret 
move ENDP;ends function  

;--------------------------------------------------------
 
win:
    call CLEAR_SCREEN    
    printn "You did well capt!!."


ret
 

maze db 1,1,1,1,1,1,1,1,1,1
     db 1,3,0,0,0,0,0,0,0,1
     db 1,0,1,1,1,0,1,1,0,1
     db 1,0,1,0,0,0,1,0,0,1
     db 1,0,1,0,1,1,1,1,0,1
     db 1,0,1,0,1,0,0,0,1,1
     db 1,0,1,0,1,0,1,0,1,1
     db 1,0,1,0,0,0,1,0,1,1
     db 1,0,1,1,1,1,1,0,2,1
     db 1,1,1,1,1,1,1,1,1,1 
    cols = 10
    rows = 10
    holdCount dw 0
    pos dw 11d
    x db 1
    y db 1
    
    
DEFINE_CLEAR_SCREEN 




